name: Code Check, Build and Publish

on:
  push:
    branches:
      - 'main'
      - 'test/**'

jobs:
  code-quality-check:
    runs-on: ubuntu-latest
    outputs:
      continue-on-error: ${{ steps.set-vars.outputs.continue-on-error }}
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - id: set-vars
      name: Set variables
      run: echo "continue-on-error=${{ github.ref != 'refs/heads/main' }}" >> $GITHUB_ENV

    - name: Install Pipenv
      run: pip install pipenv

    - name: Install dependencies with Pipenv
      run: pipenv install --dev --deploy

    - name: Check code formatting with Black
      run: pipenv run black --check src/ examples/
      continue-on-error: ${{ github.ref != 'refs/heads/main' }}

    - name: Sort imports with isort
      run: pipenv run isort src/ examples/ --check-only
      continue-on-error: ${{ github.ref != 'refs/heads/main' }}

    - name: Lint with Flake8
      run: pipenv run flake8 src/ examples/ --ignore=E501,W503
      continue-on-error: ${{ github.ref != 'refs/heads/main' }}

    - name: Static type check with mypy
      run: pipenv run mypy src/ examples/ --config-file mypy.ini
      continue-on-error: ${{ github.ref != 'refs/heads/main' }}

    - name: Check for security issues with bandit
      run: pipenv run bandit -r src/ examples/
      continue-on-error: ${{ github.ref != 'refs/heads/main' }}

  build-and-upload:
    needs: code-quality-check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'


    - name: Install Pipenv
      run: pip install pipenv

    - name: Install dependencies with Pipenv
      run: |
        pipenv install --dev --deploy


    - name: Check code formatting with Black
      run: pipenv run black --check src/ examples/
      continue-on-error: ${{ env.CONTINUE_ON_ERROR }}

    - name: Sort imports with isort
      run: pipenv run isort src/ examples/ --check-only
      continue-on-error: ${{ env.CONTINUE_ON_ERROR }}

    - name: Lint with Flake8
      run: pipenv run flake8 src/ examples/ --ignore=E501,W503
      continue-on-error: ${{ env.CONTINUE_ON_ERROR }}

    - name: Static type check with mypy
      run: pipenv run mypy src/ examples/ --config-file mypy.ini
      continue-on-error: ${{ env.CONTINUE_ON_ERROR }}

    - name: Check for security issues with bandit
      run: pipenv run bandit -r src/ examples/
      continue-on-error: ${{ env.CONTINUE_ON_ERROR }}

  build-and-upload:
    needs: code-quality-check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: python -m build

    - name: Upload to TestPyPI
      if: contains(github.ref, 'refs/heads/test/')
      uses: pypa/gh-action-pypi-publish@v1.4.2
      with:
        user: __token__
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/

    - name: Upload to PyPI
      if: github.ref == 'refs/heads/main'
      uses: pypa/gh-action-pypi-publish@v1.4.2
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
